{"version":3,"sources":["Components/ProductView.js","App.js","reportWebVitals.js","index.js"],"names":["Item","props","useState","Add","setAdd","useEffect","console","log","KeyGenr","index","Date","getTime","KeyGenrForButton","name","className","ProductList","map","el","price","onClick","AddCart","NewArr","length","indexOf","splice","DeleteCart","App","KeyGenrForApp","KeyGenrForItem","myData","data","style","backgroundColor","productList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"igBAqEeA,MAlEf,SAAcC,GAET,MAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KAWAC,qBAAU,WACPC,QAAQC,IAAIJ,KAEb,CAACA,IAIJ,IAqBIK,EAAU,SAACC,GACX,MAAM,GAAN,OAAWA,EAAX,aAAsB,IAAIC,MAAOC,YAEjCC,EAAkB,SAACH,EAAMI,GAC7B,MAAM,GAAN,OAAUA,EAAV,YAAmBJ,EAAnB,aAA8B,IAAIC,MAAOC,YAKzC,OACI,qBAAKG,UAAU,QAAf,SACKb,EAAMc,YAAYC,KAAI,SAACC,EAAGR,GAAJ,OAAY,sBAA0BK,UAAU,cAApC,UAChC,yCAAmCG,EAAGJ,OAA7BL,EAAQS,EAAGJ,OACpB,0CAAqCI,EAAGC,QAA/BV,EAAQS,EAAGC,QAEpB,wBAA8CC,QAAS,kBApDpD,SAACF,GAEXb,EAAO,GAAD,mBAAKD,GAAL,CAASc,KACfX,QAAQC,IAAI,8BAiDsDa,CAAQH,IAAnE,4BAAaL,EAAiBH,EAAMQ,EAAGJ,OACvC,wBAA+CM,QAAS,kBArClD,SAACF,GACd,IAAII,EAAM,YAAOlB,GAGjB,GAAGkB,EAAOC,OAAO,EAAE,CACf,IAAIb,EAAQN,EAAIoB,QAAQN,GAErBR,GAAO,GACNY,EAAOG,OAAOf,EAAM,GACpBH,QAAQC,IAAI,mCAGZD,QAAQC,IAAI,yCAKhBD,QAAQC,IAAI,iBAEhBH,EAAOiB,GAkB4DI,CAAWR,IAAvE,6BAAaL,EAAiBH,EAAMQ,EAAGC,UALGV,EAAQC,U,OCdlDiB,MApCf,WAEE,IAAIC,EAAc,SAAClB,GACjB,MAAM,GAAN,OAAWA,EAAX,aAAsB,IAAIC,MAAOC,YAG/BiB,EAAgB,SAACnB,EAAMI,GACzB,MAAM,GAAN,OAAUA,EAAV,YAAmBJ,EAAnB,aAA8B,IAAIC,MAAOC,YAI3C,OACE,qBAAKG,UAAU,MAAf,SAEIe,EAAOC,KAAKd,KACV,SAACC,EAAGR,GACA,OAEA,qCAAE,sBAAKK,UAAU,SAAf,UAAwB,4BAAgBG,EAAGJ,MAAXJ,GAElC,oBAA+BsB,MAAO,CAACC,gBAAgB,UAA9CL,EAAclB,OACvB,qBAAKK,UAAU,OAAf,SACA,cAAC,EAAD,CAA0CC,YAAaE,EAAGgB,aAA/CL,EAAenB,EAAMQ,EAAGJ,QADRc,EAAcV,EAAGJ,gBCd3CqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.37528de3.chunk.js","sourcesContent":["import React from 'react'\r\nimport './ProductView.css'\r\nimport { useState, useEffect} from 'react'\r\nfunction Item(props) {\r\n\r\n     const [Add, setAdd] = useState([])\r\n\r\n    let AddCart = (el)=>{\r\n        \r\n        setAdd([...Add,el])\r\n        console.log(\"Product Added to the cart.\");\r\n       \r\n    \r\n\r\n\r\n    }\r\n     useEffect(() => {\r\n        console.log(Add);\r\n        \r\n    }, [Add])\r\n\r\n    \r\n      \r\n    let DeleteCart = (el)=>{\r\n        let NewArr = [...Add];\r\n        \r\n        // console.log(el)\r\n        if(NewArr.length>0){\r\n            let index = Add.indexOf(el)\r\n            // console.log(index);\r\n            if(index>=0){\r\n                NewArr.splice(index,1);\r\n                console.log(\"Product removed from the cart.\")\r\n            }\r\n            else{\r\n                console.log(\"this Item is not Present in Cart\")\r\n            }\r\n            \r\n        }\r\n        else{\r\n            console.log(\"Cart is Empty\")\r\n        }\r\n        setAdd(NewArr)\r\n    }\r\n    let KeyGenr = (index) =>{\r\n        return `${ index }_${ new Date().getTime() }`;\r\n    }\r\n    let KeyGenrForButton =(index,name)=>{\r\n    return `${name}_${ index }_${ new Date().getTime() }`;\r\n        \r\n        \r\n\r\n    }\r\n    return (\r\n        <div className=\"Outer\">\r\n            {props.ProductList.map((el,index)=><div key={KeyGenr(index)} className=\"ProductCell\">\r\n               <h3 key={KeyGenr(el.name)}>Name : {el.name}</h3>\r\n               <h3 key={KeyGenr(el.price)}>Price : {el.price}</h3>\r\n            \r\n               <button key={KeyGenrForButton(index,el.name)} onClick={()=>AddCart(el)}>Add to the cart</button>\r\n               <button key={KeyGenrForButton(index,el.price)} onClick={()=>DeleteCart(el)}>Remove from cart</button>\r\n            \r\n            \r\n\r\n            </div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item\r\n","\nimport './App.css';\nimport Item from './Components/ProductView';\nimport myData from './product.json';\n\nfunction App() {\n  \n  let KeyGenrForApp=(index)=>{\n    return `${ index }_${ new Date().getTime() }`;\n\n  }\n  let KeyGenrForItem =(index,name)=>{\n    return `${name}_${ index }_${ new Date().getTime() }`;\n    \n\n}\n  return (\n    <div className=\"App\">\n      {\n        myData.data.map(\n          (el,index)=>{\n              return (\n                \n              <><div className=\"Header\"><p key={index}>{el.name}</p>\n            \n              <hr key={KeyGenrForApp(index)} style={{backgroundColor:\"black\"}}/></div>\n              <div className=\"Itme\" key={KeyGenrForApp(el.name)}>\n              <Item key={KeyGenrForItem(index,el.name)} ProductList={el.productList}/>\n\n              </div>\n              \n              </>\n                \n              )\n          }\n        )\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}